import unittest
from 1-my_list import MyList

class TestMyList(unittest.TestCase):
    def test_print_sorted(self):
        # Test case 1: Normal case
        my_list = MyList([3, 1, 4, 2, 5])
        self.assertEqual(my_list.print_sorted(), None)
        self.assertEqual(my_list, [3, 1, 4, 2, 5])

    def test_print_sorted_with_sorted_list(self):
        # Test case 2: Already sorted list
        my_list = MyList([1, 2, 3, 4, 5])
        self.assertEqual(my_list.print_sorted(), None)
        self.assertEqual(my_list, [1, 2, 3, 4, 5])

    def test_print_sorted_with_reverse_sorted_list(self):
        # Test case 3: Reverse sorted list
        my_list = MyList([5, 4, 3, 2, 1])
        self.assertEqual(my_list.print_sorted(), None)
        self.assertEqual(my_list, [5, 4, 3, 2, 1])

    def test_print_sorted_with_duplicates(self):
        # Test case 4: List with duplicate elements
        my_list = MyList([1, 3, 2, 3, 1])
        self.assertEqual(my_list.print_sorted(), None)
        self.assertEqual(my_list, [1, 3, 2, 3, 1])

    def test_print_sorted_with_empty_list(self):
        # Test case 5: Empty list
        my_list = MyList([])
        self.assertEqual(my_list.print_sorted(), None)
        self.assertEqual(my_list, [])

if __name__ == '__main__':
    unittest.main()
